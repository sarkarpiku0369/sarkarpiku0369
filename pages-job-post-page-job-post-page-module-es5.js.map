{"version":3,"sources":["webpack:///src/app/pages/job-post-page/job-post-page-routing.module.ts","webpack:///src/app/pages/job-post-page/job-post-page.component.ts","webpack:///src/app/pages/job-post-page/job-post-page.component.html","webpack:///src/app/pages/job-post-page/job-post-page.module.ts"],"names":["routes","path","component","JobPostPageRoutingModule","forChild","imports","exports","JobPostPageComponent","router","toastr","apiService","formBuilder","submitted","imageLoaded","jobPostForm","group","title","required","category_id","delivery_time_id","status","body","img_choose","getJobDetails","token","localStorage","getItem","addJobDetails","subscribe","res","console","log","jobPageData","message","error","err","controls","value","invalid","formData","FormData","set","image","addUpdateJob","success","reset","event","target","files","length","dataTransfer","fileName","name","toUpperCase","endsWith","addJob","importFile","selector","templateUrl","styleUrls","JobPostPageModule","declarations"],"mappings":"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","file":"pages-job-post-page-job-post-page-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JobPostPageComponent } from './job-post-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobPostPageComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class JobPostPageRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from 'src/app/service/api.service';\n\n@Component({\n  selector: 'app-job-post-page',\n  templateUrl: './job-post-page.component.html',\n  styleUrls: ['./job-post-page.component.css']\n})\nexport class JobPostPageComponent implements OnInit {\n  jobPostForm: FormGroup;\n  submitted = false;\n  jobPageData: any;\n  image: any;\n  imageLoaded = false;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, \n    private apiService: ApiService, \n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.jobPostForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      category_id: ['', [Validators.required]],\n      delivery_time_id: ['', [Validators.required]],\n      status: [1, [Validators.required]],\n      body: ['', [Validators.required]],\n      img_choose: ['']\n    });\n    this.getJobDetails();\n  }\n\n  getJobDetails() {\n    const token = localStorage.getItem(\"token\");\n    this.apiService.addJobDetails(token, {}).subscribe((res: any) => {\n      console.log(res);\n      if (res.status) {\n        this.jobPageData = res;\n      } else if (res.message) {\n        this.toastr.error(res.message);\n      } else {\n        this.toastr.error(\"Server error!! please try again later.\");\n      }\n    }, err => {\n      console.log(err);\n      this.toastr.error(err.error.message);\n    })\n  }\n  get f() { return this.jobPostForm.controls; }\n\n  addJob() {\n    this.jobPostForm.value.status = 1;\n    this.submitted = true;\n    console.log(\"addJob\", this.jobPostForm);\n    if (this.jobPostForm.invalid) {\n      return;\n    } else {\n      console.log(\"valid...\");\n      const token = localStorage.getItem(\"token\");\n      let formData = new FormData();\n      formData.set('id', '0');\n      formData.set('title', this.jobPostForm.value.title);\n      formData.set('category_id', this.jobPostForm.value.category_id);\n      formData.set('delivery_time_id', this.jobPostForm.value.delivery_time_id);\n      formData.set('status', this.jobPostForm.value.status);\n      formData.set('body', this.jobPostForm.value.body);\n      if(this.imageLoaded){\n        formData.set('image', this.image);\n        formData.set('galleryimage[]', this.image);\n      }\n\n      this.apiService.addUpdateJob(token, formData).subscribe((res: any) => {\n        console.log(res);\n        if (res.status) {\n          this.toastr.success(res.message);\n          this.submitted = false;\n          this.imageLoaded = false;\n          this.jobPostForm.reset();\n        } else if (res.message) {\n          this.toastr.error(res.message);\n        } else {\n          this.toastr.error(\"Server error!! please try again later.\");\n        }\n      }, err => {\n        console.log(err);\n        this.toastr.error(err.error.message);\n      });\n    }\n  }\n\n  importFile(event) {\n    if (event.target.files && event.target.files.length > 0) {\n      let files = event.target.files || event.dataTransfer.files;\n      if (!files.length)\n        return;\n      var fileName = files[0].name.toUpperCase();\n      console.log(fileName.endsWith);\n      if (fileName.endsWith(\".JPG\") || fileName.endsWith(\".JPEG\") || fileName.endsWith(\".PNG\")) {\n        this.image = files[0];\n        this.imageLoaded = true;\n      } else {\n        this.image = null;\n        this.toastr.error(\"Please select a valid image file jpeg/jpg/png\");\n      }\n    }\n\n  }\n\n}\n","<app-header></app-header>\n<!-- Homefix slider Area Start -->\n<div class=\"jobPostboxholder pt-60 pb-60\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-10\">\n                <h4 class=\"text-center\">What service are you looking for?</h4>\n                <form class=\"jobPostbox\" [formGroup]=\"jobPostForm\" (ngSubmit)=\"addJob()\">\n                    <div class=\"col-12\">\n                        <div class=\"form-group position-relative \">\n                            <label for=\"exampleInputJobTitle\" class=\"form-label\">Job title</label>\n                            <input type=\"text\" placeholder=\"ex: Plumber needed\" class=\"form-control rounded-0\"\n                                id=\"exampleInputJobTitle\" formControlName=\"title\" aria-describedby=\"emailHelp\">\n                        </div>\n                        <div *ngIf=\"f.title.errors?.required && submitted\" class=\"error-disp\">\n                            <small class=\"text-danger danger-custom\">Please enter job title.</small>\n                        </div>\n                    </div>\n                    <div class=\"col-12\">\n                        <div class=\"form-group position-relative \">\n                            <label for=\"exampleInputPassword1\" class=\"form-label\">Tell us a bit about this\n                                project</label>\n                            <textarea class=\"form-control\" formControlName=\"body\" placeholder=\"Let us know\"\n                                id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                        </div>\n                        <div *ngIf=\"f.body.errors?.required && submitted\" class=\"error-disp\">\n                            <small class=\"text-danger danger-custom\">Please write about this project.</small>\n                        </div>\n                    </div>\n                    <div class=\"col-12\">\n\n                        <div class=\"form-group position-relative \" *ngIf=\"jobPageData\">\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Choose category</label>\n                            <select class=\"form-select\" formControlName=\"category_id\"\n                                aria-label=\"Default select example\">\n                                <option selected value=\"\">Select category</option>\n                                <option *ngFor=\"let s of jobPageData.categories\" [value]=\"s.id\">{{s.name}}</option>\n                                <!-- <option value=\"2\">Two</option>\n                                <option value=\"3\">Three</option> -->\n                            </select>\n                        </div>\n                        <div *ngIf=\"f.category_id.errors?.required && submitted\" class=\"error-disp\">\n                            <small class=\"text-danger danger-custom\">Please select a category.</small>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group position-relative \" *ngIf=\"jobPageData\">\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Delivery Time</label>\n                                <select class=\"form-select\" formControlName=\"delivery_time_id\"\n                                    aria-label=\"Default select example\">\n                                    <option selected value=\"\">Delivery Time</option>\n                                    <option *ngFor=\"let d of jobPageData.delivery_times\" [value]=\"d.id\">{{d.name}}\n                                    </option>\n                                    <!-- <option value=\"2\">Two day</option>\n                                    <option value=\"3\">Three day</option> -->\n                                </select>\n                            </div>\n                            <div *ngIf=\"f.delivery_time_id.errors?.required && submitted\" class=\"error-disp\">\n                                <small class=\"text-danger danger-custom\">Please select delivery time.</small>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group position-relative \">\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Project Image</label>\n                                <input type=\"file\" (change)=\"importFile($event)\" formControlName=\"img_choose\"\n                                    class=\"form-control\" id=\"inputGroupFile02\">\n                            </div>\n                            <!-- <div *ngIf=\"f.img_choose.errors?.required && submitted\" class=\"error-disp\">\n                                <small class=\"text-danger danger-custom\">Please select an image.</small>\n                            </div> -->\n                        </div>\n                    </div>\n                    <div class=\"text-start\">\n                        <p class=\"infop\">\n                            By submitting this form you agree to our <a href=\"#0\">terms and conditions</a> and\n                            our <a href=\"#0\">Privacy Policy</a>\n                            which explains how we may collect, use and disclose your personal information\n                            including to third parties.\n                        </p>\n                        <button class=\"button1 mt-30\" type=\"submit\"> Post a Job</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Homefix slider Area End -->\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JobPostPageRoutingModule } from './job-post-page-routing.module';\nimport { JobPostPageComponent } from './job-post-page.component';\nimport { IncludeModule } from 'src/app/includes/include.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [JobPostPageComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JobPostPageRoutingModule,\n    IncludeModule\n  ]\n})\nexport class JobPostPageModule { }\n"]}