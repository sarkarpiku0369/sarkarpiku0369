{"version":3,"sources":["./src/app/pages/signup/signup-routing.module.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/pages/signup/signup.module.ts"],"names":[],"mappings":"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","file":"pages-signup-signup-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SignupComponent } from './signup.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignupRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PagesService } from 'src/app/service/pages.service';\nimport { CustomValidator } from 'src/app/custom-validator';\nimport { MustMatch } from '../../_helpers/must-match.validator';\nimport { ApiService } from 'src/app/service/api.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  registerPageData: any;\n  registerForm: FormGroup;\n  registerFormStep1: FormGroup;\n  submitted = false;\n  role_id: any = 3;\n  registerResponse: any;\n  registerResponseError: any;\n  constructor(private page: PagesService, \n    private apiService:  ApiService,\n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.registerFormStep1 = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n\n    this.registerForm = this.formBuilder.group({\n      fname: ['', Validators.required],\n      lname: ['', Validators.required],\n      \n      password: ['', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z]).{8,}$')]],\n      // password_confirmation: ['', Validators.compose([Validators.required, CustomValidator.equalTo('password')])],\n      // phone_number: ['', Validators.required],\n      country_id: ['', Validators.required],\n      state_id: ['', Validators.required],\n      city: ['', Validators.required],\n      zip_code: ['', Validators.required],\n      terms: [false, Validators.requiredTrue]\n      // city: ['', Validators.required],\n      // zip: ['', Validators.required],\n      // dob: ['', Validators.compose([Validators.required, CustomValidator.ageCheck('dob')])],\n      // phone_no: ['', Validators.required],\n      // event_date: [''],\n      // recaptchaReactive: ['', Validators.required],\n\n\n    },\n      // {\n      //   validator: [MustMatch('password', 'password_confirmation')]\n      // }\n    );\n\n    this.getRegisterPage();\n  }\n\n  getRegisterPage() {\n    this.page.getRegister().subscribe((res: any) => {\n      console.log(res);\n      if (res.status) {\n        this.registerPageData = res;\n      }\n    }, err => {\n      console.log(err);\n    })\n  }\n\n  selectRole(role) {\n    console.log(\"role\", role);\n    this.role_id = role.id;\n  }\n\n  get f() { return this.registerForm.controls; }\n  get g() { return this.registerFormStep1.controls; }\n\n  registrationSubmit() {\n    this.submitted = true;\n    this.registerResponseError = null;\n    console.log(\"registrationSubmit\", this.registerForm);\n\n    if (this.registerForm.invalid) {\n      return;\n    } else {\n      console.log(\"valid...\");\n\n      let formData = new FormData();\n      formData.set('fname', this.registerForm.value.fname);\n      formData.set('lname', this.registerForm.value.lname);\n      formData.set('email', this.registerFormStep1.value.email);\n      // formData.set('phone_number', '8899889988');\n      formData.set('password', this.registerForm.value.password);\n      formData.set('password_confirmation', this.registerForm.value.password);\n      formData.set('country_id', this.registerForm.value.country_id);\n      formData.set('city', this.registerForm.value.city);\n      formData.set('zip_code', this.registerForm.value.zip_code);\n      formData.set('role_id', this.role_id);\n\n      this.page.register(formData).subscribe((res: any) => {\n        console.log(res);\n        if(res.status){\n          this.registerResponse = res;\n        }else{\n          this.registerResponseError = res;\n        }\n      }, err => {\n        console.log(err);\n      })\n\n    }\n  }\n  submittedStep1 = false;\n  step1success = false;\n  registrationStep1Submit(){\n    this.submittedStep1 = true;\n    console.log(this.registerFormStep1);\n    if (this.registerFormStep1.invalid) {\n      return;\n    }else{\n      this.step1success = true;\n    } \n\n  }\n\n  changeCountry(event){\n    console.log(event);\n    console.log(event.target.value);\n    this.registerForm.patchValue({'state_id': ''});\n\n    this.getSateList(event.target.value);\n  }\n\n  stateList: any =[];\n  getSateList(id){\n    this.apiService.getStates(id).subscribe((res: any)=>{\n      console.log(res);\n      if(res && res.status){\n        this.stateList = res.states;\n      }\n    }, err=>{\n      console.log(err);\n    })\n  }\n  \n}\n","<app-header></app-header>\n<section class=\"homefix_login_area pt-85 pb-120\" [hidden]=\"step1success\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-xl-6 col-lg-8\">\n                <div class=\"homefix_login_inner\">\n                    <div class=\"homefix_login_details\">\n                        <!-- login_form title-->\n                        <div class=\"form_title\">\n                            <h2 class=\"login_form_title\">Get your free account</h2>\n                        </div>\n                        <form action=\"\">\n                            <!-- facebook button -->\n                            <a class=\"login_facebook_btn\" href=\"#\"><img src=\"assets/images/facebook.png\" alt=\"facebook\">\n                                Log in with facebook</a>\n                            <a class=\"login_google_btn\" href=\"#\"><img src=\"assets/images/email.png\" alt=\"email\">\n                                Log in\n                                with Google</a>\n                            <!-- or title -->\n                            <div class=\"or_cont\">\n                                <hr><span>or</span>\n                            </div>\n                            <!-- input email or password -->\n                            <form class=\"loginStep1\" [formGroup]=\"registerFormStep1\" (ngSubmit)=\"registrationStep1Submit()\">\n                                <div class=\"login_from_field\">\n\n                                    <div class=\"login_from_field_inner\">\n                                        <span><i class=\"icofont-envelope\"></i></span>\n                                        <input type=\"email\" placeholder=\"Email Address\" formControlName=\"email\"\n                                            [ngClass]=\"{ 'is-invalid': submittedStep1 && g.email.errors }\" name=\"email\"\n                                            id=\"email\">\n                                        <div *ngIf=\"submittedStep1 && g.email.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"g.email.errors.required\">Email is required</div>\n                                            <div *ngIf=\"g.email.errors.email\">Please, enter valid email\n                                                address.</div>\n                                        </div>\n                                    </div>\n                                    <!-- submit button -->\n                                    <input type=\"submit\" value=\"Continue with Email\">\n\n                                </div>\n                            </form>\n                            <hr>\n                            <!-- remember or sing up -->\n                            <div class=\"remember\">\n                                <label for=\"\">Already a member ?</label><a [routerLink]=\"['/login']\"\n                                    style=\"color: #00a3ff;\">Sign in</a>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n\n<div class=\"registration-box pt-85 pb-120\" *ngIf=\"!registerResponse && step1success\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-7\">\n                <h2 class=\"text-center login_form_title\">Complete your free account setup</h2>\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <form [formGroup]=\"registerForm\">\n                            <div class=\"reg-email-disp text-center mb-3\" *ngIf=\"registerFormStep1.value.email\">\n                                <p>{{registerFormStep1.value.email}}</p>\n                            </div>\n                            <div *ngIf=\"submitted && registerResponseError && registerResponseError.message\"\n                                class=\"invalid-feedback text-center mb-4\">\n                                <div>{{registerResponseError.message}}</div>\n                            </div>\n                            <div class=\"row mb-4\">\n                                <div class=\"col-md-6 mb-4 mb-md-0\">\n                                    <div class=\"input-group customborder\">\n                                        <span class=\"input-group-text bg-white  border-0 \" id=\"basic-addon1\"><i\n                                                class=\"bi bi-person-fill\" style=\"color: #00a3ff\"></i></span>\n                                        <input type=\"text\" placeholder=\"First name\" formControlName=\"fname\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.fname.errors }\"\n                                            class=\"form-control border-start-0 rounded-0\" id=\"exampleInputEmail1\" name=\"fname\"\n                                            aria-describedby=\"emailHelp\" />\n                                    </div>\n                                    <div *ngIf=\"submitted && f.fname.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.fname.errors.required\">First name is required</div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div class=\"input-group customborder\">\n                                        <span class=\"input-group-text bg-white  border-0 \" id=\"basic-addon1\"><i\n                                                class=\"bi bi-person-fill\" style=\"color: #00a3ff\"></i></span>\n                                        <input type=\"text\" placeholder=\"Last name\" formControlName=\"lname\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.lname.errors }\"\n                                            class=\"form-control border-start-0 rounded-0\" id=\"exampleInputEmail1\" name=\"lname\"\n                                            aria-describedby=\"emailHelp\" />\n                                    </div>\n                                    <div *ngIf=\"submitted && f.lname.errors\" class=\"invalid-feedback\">\n                                        <div *ngIf=\"f.lname.errors.required\">Last name is required</div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- <div class=\"mb-4\">\n                                <div class=\"input-group customborder\">\n                                    <span class=\"input-group-text bg-white  border-0\" id=\"basic-addon1\"><i\n                                            class=\"bi bi-envelope-fill\" style=\"color: #00a3ff\"></i></span>\n                                    <input type=\"text\" placeholder=\"Enter email address\" formControlName=\"email\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                                        class=\"form-control rounded-0\" id=\"exampleInputEmail1\"\n                                        aria-describedby=\"emailHelp\" />\n                                </div>\n                                \n                            </div> -->\n\n                            <div class=\"mb-4\">\n                                <div class=\"input-group customborder\">\n                                    <span class=\"input-group-text bg-white  border-0\" id=\"basic-addon1\"><i\n                                            class=\"bi bi-key-fill\" style=\"color: #00a3ff\"></i></span>\n                                    <input type=\"password\" placeholder=\"Create a new Password\"\n                                        formControlName=\"password\"\n                                        [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                                        class=\"form-control rounded-0\" id=\"exampleInputEmail1\"\n                                        aria-describedby=\"emailHelp\" />\n                                </div>\n                                <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                    <div *ngIf=\"f.password.errors.pattern || f.password.errors.minlength\">Password\n                                        must be 8\n                                        characters, at least 1 upper & 1 lowercase\n                                        letter</div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                \n                                <div class=\"col-md-3\">\n                                    <div class=\"mb-4\">\n                                        <select aria-placeholder=\"Country\" class=\"form-select customborder\"\n                                            formControlName=\"country_id\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.country_id.errors }\"\n                                            aria-label=\"Default select example\" (change)=\"changeCountry($event)\">\n                                            <option selected value=\"\">Country</option>\n                                            <option *ngFor=\"let country of registerPageData?.countries\"\n                                                [value]=\"country.id\">{{country.name}}</option>\n                                            <!-- <option value=\"1\">One</option>\n                                            <option value=\"2\">Two</option>\n                                            <option value=\"3\">Three</option> -->\n                                        </select>\n                                        <div *ngIf=\"submitted && f.country_id.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.country_id.errors.required\">Country is required</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div class=\"mb-4\">\n                                        <select aria-placeholder=\"State\" class=\"form-select customborder\"\n                                            formControlName=\"state_id\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.state_id.errors }\"\n                                            aria-label=\"Default select example\">\n                                            <option selected value=\"\">Select State</option>\n                                            <option *ngFor=\"let state of stateList\"\n                                                [value]=\"state.id\">{{state.name}}</option>\n                                            <!-- <option value=\"1\">One</option>\n                                            <option value=\"2\">Two</option>\n                                            <option value=\"3\">Three</option> -->\n                                        </select>\n                                        <div *ngIf=\"submitted && f.state_id.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.state_id.errors.required\">State is required</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div class=\"col-md-3\">\n                                    <div class=\"mb-4\">\n                                        <!-- <select aria-placeholder=\"City\" class=\"form-select customborder\"\n                                            formControlName=\"city\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\"\n                                            aria-label=\"Default select example\">\n                                            <option selected value=\"\">City</option>\n                                            <option value=\"One\">One</option>\n                                            <option value=\"Two\">Two</option>\n                                            <option value=\"Three\">Three</option>\n                                        </select> -->\n                                        <input type=\"text\" placeholder=\"City\"\n                                            class=\"form-control customborder rounded-0\" formControlName=\"city\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.city.errors }\"\n                                            id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                                        <div *ngIf=\"submitted && f.city.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.city.errors.required\">City is required</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <div class=\"mb-4\">\n                                        <input type=\"number\" placeholder=\"Zip code\"\n                                            class=\"form-control customborder rounded-0\" formControlName=\"zip_code\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.zip_code.errors }\"\n                                            id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\n                                        <div *ngIf=\"submitted && f.zip_code.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.zip_code.errors.required\">Zip code is required</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-12\">\n                                    <p class=\"text-center text-dark\">\n                                        <strong>I want to</strong>\n                                    </p>\n                                    <div class=\"text-center\">\n                                        <div class=\"btn-group\" role=\"group\"\n                                            aria-label=\"Basic radio toggle button group\">\n                                            <div *ngFor=\"let roles of registerPageData?.roles;let i = index;\">\n                                                <input type=\"radio\" class=\"btn-check \" name=\"btnradio\"\n                                                    id=\"btnradio{{i}}\" autocomplete=\"off\" checked=\"i==0\" />\n                                                <label (click)=\"selectRole(roles)\"\n                                                    class=\"btn btn-outline-primary radBtn    \"\n                                                    for=\"btnradio{{i}}\" id=\"btnrole{{i}}\">{{roles.display_name}}</label>\n                                            </div>\n                                            <!-- <div>\n                                                <input type=\"radio\" class=\"btn-check \" name=\"btnradio\" id=\"btnradio1\"\n                                                    autocomplete=\"off\" checked />\n                                                <label (click)=\"selectRole(paymentSelect[i+1])\" class=\"btn btn-outline-primary radBtn    \" for=\"btnradio1\">Hire a\n                                                    Pro</label>\n                                            </div>\n                                            <div>\n                                                <input type=\"radio\" class=\"btn-check  \" name=\"btnradio\" id=\"btnradio2\"\n                                                    autocomplete=\"off\" />\n                                                <label (click)=\"selectRole(paymentSelect[i+1])\" class=\"btn btn-outline-primary   \" for=\"btnradio2\">Work as a\n                                                    Constructor</label>\n                                            </div> -->\n                                        </div>\n                                    </div>\n                                    <div class=\"my-3 form-check\">\n                                        <input type=\"checkbox\" formControlName=\"terms\" class=\"form-check-input\"\n                                            id=\"exampleCheck1\" />\n                                        <label class=\"form-check-label fs-6 \" for=\"exampleCheck1\">Yes i understand and\n                                            agree to the\n                                            Homefixpros <a href=\"#0\" style=\"color: #00a3ff;\">Terms of\n                                                Use</a> and <a href=\"#0\" style=\"color: #00a3ff;\"> Privacy Policy</a>.\n                                        </label>\n                                        <div *ngIf=\"submitted && f.terms.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.terms.errors.required\">Please accept terms & policy</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"d-grid gap-2\">\n                                        <button class=\"btn btn-primary accountbtn\" type=\"button\"\n                                            (click)=\"registrationSubmit()\" style=\"background-color: #00A3FF;\">Create My\n                                            Account</button>\n                                    </div>\n                                    <hr class=\"my-3\" />\n                                    <p class=\"text-center\"> Already a member? <a routerLink=\"/login\"\n                                            style=\"color: #00a3ff;\">Sign\n                                            in </a></p>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"d-block conta\" *ngIf=\"registerResponse && registerResponse.status\">\n    <div class=\"card border-0\">\n        <div class=\"card-body px-3 px-md-5 py-5\">\n            <div class=\"text-center py-3\">\n                <img src=\"./assets/images/Group2089.png\" alt=\"\" />\n            </div>\n            <div class=\"text-center\">\n                <p class=\"fs-3 fw-bold text-dark\">\n                    Verify your email to proceed\n                </p>\n                <p class=\"mb-4\">\n                    {{registerResponse?.message}}\n                </p>\n\n                <div class=\"d-grid gap-2\">\n                    <button [routerLink]=\"['/login']\" class=\"btn btn-primary\" type=\"button\"\n                        style=\"background-color: #00A3FF;\">Login</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Homefix reg Area End -->\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { SignupComponent } from './signup.component';\nimport { IncludeModule } from 'src/app/includes/include.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [SignupComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SignupRoutingModule,\n    IncludeModule\n  ]\n})\nexport class SignupModule { }\n"],"sourceRoot":"webpack:///"}