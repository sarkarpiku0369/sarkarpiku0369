{"version":3,"sources":["./src/app/pages/job-post-page/job-post-page-routing.module.ts","./src/app/pages/job-post-page/job-post-page.component.ts","./src/app/pages/job-post-page/job-post-page.component.html","./src/app/pages/job-post-page/job-post-page.module.ts"],"names":[],"mappings":"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","file":"pages-job-post-page-job-post-page-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JobPostPageComponent } from './job-post-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: JobPostPageComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class JobPostPageRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ApiService } from 'src/app/service/api.service';\n\n@Component({\n  selector: 'app-job-post-page',\n  templateUrl: './job-post-page.component.html',\n  styleUrls: ['./job-post-page.component.css']\n})\nexport class JobPostPageComponent implements OnInit {\n  jobPostForm: FormGroup;\n  submitted = false;\n  jobPageData: any;\n  image: any;\n  imageLoaded = false;\n\n  constructor(private router: Router,\n    private toastr: ToastrService, \n    private apiService: ApiService, \n    private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.jobPostForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      category_id: ['', [Validators.required]],\n      delivery_time_id: ['', [Validators.required]],\n      status: [1, [Validators.required]],\n      body: ['', [Validators.required]],\n      img_choose: ['']\n    });\n    this.getJobDetails();\n  }\n\n  getJobDetails() {\n    const token = localStorage.getItem(\"token\");\n    this.apiService.addJobDetails(token, {}).subscribe((res: any) => {\n      console.log(res);\n      if (res.status) {\n        this.jobPageData = res;\n      } else if (res.message) {\n        this.toastr.error(res.message);\n      } else {\n        this.toastr.error(\"Server error!! please try again later.\");\n      }\n    }, err => {\n      console.log(err);\n      this.toastr.error(err.error.message);\n    })\n  }\n  get f() { return this.jobPostForm.controls; }\n\n  addJob() {\n    this.jobPostForm.value.status = 1;\n    this.submitted = true;\n    console.log(\"addJob\", this.jobPostForm);\n    if (this.jobPostForm.invalid) {\n      return;\n    } else {\n      console.log(\"valid...\");\n      const token = localStorage.getItem(\"token\");\n      let formData = new FormData();\n      formData.set('id', '0');\n      formData.set('title', this.jobPostForm.value.title);\n      formData.set('category_id', this.jobPostForm.value.category_id);\n      formData.set('delivery_time_id', this.jobPostForm.value.delivery_time_id);\n      formData.set('status', this.jobPostForm.value.status);\n      formData.set('body', this.jobPostForm.value.body);\n      if(this.imageLoaded){\n        formData.set('image', this.image);\n        formData.set('galleryimage[]', this.image);\n      }\n\n      this.apiService.addUpdateJob(token, formData).subscribe((res: any) => {\n        console.log(res);\n        if (res.status) {\n          this.toastr.success(res.message);\n          this.submitted = false;\n          this.imageLoaded = false;\n          this.jobPostForm.reset();\n        } else if (res.message) {\n          this.toastr.error(res.message);\n        } else {\n          this.toastr.error(\"Server error!! please try again later.\");\n        }\n      }, err => {\n        console.log(err);\n        this.toastr.error(err.error.message);\n      });\n    }\n  }\n\n  importFile(event) {\n    if (event.target.files && event.target.files.length > 0) {\n      let files = event.target.files || event.dataTransfer.files;\n      if (!files.length)\n        return;\n      var fileName = files[0].name.toUpperCase();\n      console.log(fileName.endsWith);\n      if (fileName.endsWith(\".JPG\") || fileName.endsWith(\".JPEG\") || fileName.endsWith(\".PNG\")) {\n        this.image = files[0];\n        this.imageLoaded = true;\n      } else {\n        this.image = null;\n        this.toastr.error(\"Please select a valid image file jpeg/jpg/png\");\n      }\n    }\n\n  }\n\n}\n","<app-header></app-header>\n<!-- Homefix slider Area Start -->\n<div class=\"jobPostboxholder pt-60 pb-60\">\n    <div class=\"container\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-lg-10\">\n                <h4 class=\"text-center\">What service are you looking for?</h4>\n                <form class=\"jobPostbox\" [formGroup]=\"jobPostForm\" (ngSubmit)=\"addJob()\">\n                    <div class=\"col-12\">\n                        <div class=\"form-group position-relative \">\n                            <label for=\"exampleInputJobTitle\" class=\"form-label\">Job title</label>\n                            <input type=\"text\" placeholder=\"ex: Plumber needed\" class=\"form-control rounded-0\"\n                                id=\"exampleInputJobTitle\" formControlName=\"title\" aria-describedby=\"emailHelp\">\n                        </div>\n                        <div *ngIf=\"f.title.errors?.required && submitted\" class=\"error-disp\">\n                            <small class=\"text-danger danger-custom\">Please enter job title.</small>\n                        </div>\n                    </div>\n                    <div class=\"col-12\">\n                        <div class=\"form-group position-relative \">\n                            <label for=\"exampleInputPassword1\" class=\"form-label\">Tell us a bit about this\n                                project</label>\n                            <textarea class=\"form-control\" formControlName=\"body\" placeholder=\"Let us know\"\n                                id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\n                        </div>\n                        <div *ngIf=\"f.body.errors?.required && submitted\" class=\"error-disp\">\n                            <small class=\"text-danger danger-custom\">Please write about this project.</small>\n                        </div>\n                    </div>\n                    <div class=\"col-12\">\n\n                        <div class=\"form-group position-relative \" *ngIf=\"jobPageData\">\n                            <label for=\"exampleInputEmail1\" class=\"form-label\">Choose category</label>\n                            <select class=\"form-select\" formControlName=\"category_id\"\n                                aria-label=\"Default select example\">\n                                <option selected value=\"\">Select category</option>\n                                <option *ngFor=\"let s of jobPageData.categories\" [value]=\"s.id\">{{s.name}}</option>\n                                <!-- <option value=\"2\">Two</option>\n                                <option value=\"3\">Three</option> -->\n                            </select>\n                        </div>\n                        <div *ngIf=\"f.category_id.errors?.required && submitted\" class=\"error-disp\">\n                            <small class=\"text-danger danger-custom\">Please select a category.</small>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group position-relative \" *ngIf=\"jobPageData\">\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Delivery Time</label>\n                                <select class=\"form-select\" formControlName=\"delivery_time_id\"\n                                    aria-label=\"Default select example\">\n                                    <option selected value=\"\">Delivery Time</option>\n                                    <option *ngFor=\"let d of jobPageData.delivery_times\" [value]=\"d.id\">{{d.name}}\n                                    </option>\n                                    <!-- <option value=\"2\">Two day</option>\n                                    <option value=\"3\">Three day</option> -->\n                                </select>\n                            </div>\n                            <div *ngIf=\"f.delivery_time_id.errors?.required && submitted\" class=\"error-disp\">\n                                <small class=\"text-danger danger-custom\">Please select delivery time.</small>\n                            </div>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"form-group position-relative \">\n                                <label for=\"exampleInputEmail1\" class=\"form-label\">Project Image</label>\n                                <input type=\"file\" (change)=\"importFile($event)\" formControlName=\"img_choose\"\n                                    class=\"form-control\" id=\"inputGroupFile02\">\n                            </div>\n                            <!-- <div *ngIf=\"f.img_choose.errors?.required && submitted\" class=\"error-disp\">\n                                <small class=\"text-danger danger-custom\">Please select an image.</small>\n                            </div> -->\n                        </div>\n                    </div>\n                    <div class=\"text-start\">\n                        <p class=\"infop\">\n                            By submitting this form you agree to our <a href=\"#0\">terms and conditions</a> and\n                            our <a href=\"#0\">Privacy Policy</a>\n                            which explains how we may collect, use and disclose your personal information\n                            including to third parties.\n                        </p>\n                        <button class=\"button1 mt-30\" type=\"submit\"> Post a Job</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- Homefix slider Area End -->\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { JobPostPageRoutingModule } from './job-post-page-routing.module';\nimport { JobPostPageComponent } from './job-post-page.component';\nimport { IncludeModule } from 'src/app/includes/include.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [JobPostPageComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JobPostPageRoutingModule,\n    IncludeModule\n  ]\n})\nexport class JobPostPageModule { }\n"],"sourceRoot":"webpack:///"}