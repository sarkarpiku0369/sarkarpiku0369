{"version":3,"sources":["webpack:///src/app/pages/login/login-routing.module.ts","webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.module.ts"],"names":["routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginComponent","page","router","toastr","spinner","userService","formBuilder","submitted","loginForm","group","email","required","password","controls","console","log","invalid","formData","FormData","set","value","userLogin","subscribe","res","status","userId","response_data","id","localStorage","setItem","api_token","role_id","fname","lname","storeUserData","reset","navigate","success","message","error","err","loginSubmit","selector","templateUrl","styleUrls","LoginModule","declarations"],"mappings":"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","file":"pages-login-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { PagesService } from 'src/app/service/pages.service';\nimport { UserService } from 'src/app/service/user.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  submitted = false;\n  userId: any;\n  constructor(private page: PagesService, \n    private router: Router,\n    private toastr: ToastrService, private spinner: NgxSpinnerService, private userService: UserService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  loginSubmit() {\n    this.submitted = true;\n    // this.loginResponseError = null;\n    console.log(\"loginSubmit\", this.loginForm);\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      console.log(\"valid...\");\n      let formData = new FormData();\n      formData.set('email', this.loginForm.value.email);\n      formData.set('password', this.loginForm.value.password);\n\n      this.userService.userLogin(formData).subscribe((res: any)=>{\n        console.log(res);\n        if(res.status){\n          // this.toastr.success('Hello world!', 'Toastr fun!');\n          this.submitted = false;\n          this.userId = res.response_data.id;\n          localStorage.setItem(\"token\", res.api_token);\n          localStorage.setItem(\"userId\", res.response_data.id);\n          localStorage.setItem(\"roleId\", res.response_data.role_id);\n          localStorage.setItem(\"fName\", res.response_data.fname);\n          localStorage.setItem(\"lName\", res.response_data.lname);\n          this.userService.storeUserData(res);\n          this.loginForm.reset();\n          this.router.navigate(['/user-profile']);\n\n          this.toastr.success(res.message);\n        }else if(res){\n          this.toastr.error(res.message);\n        }\n      }, err=>{\n        console.log(err);\n      });\n\n    }\n  }\n\n}\n","<app-header></app-header>\n<!-- Homefix Login Area Start -->\n<section class=\"homefix_login_area pt-85 pb-120\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-xl-6 col-lg-8\">\n        <div class=\"homefix_login_inner\">\n          <div class=\"homefix_login_details\">\n            <!-- login_form title-->\n            <div class=\"form_title\">\n              <h2 class=\"login_form_title\">Login to Homefixpros</h2>\n            </div>\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginSubmit()\">\n              <!-- facebook button -->\n              <a class=\"login_facebook_btn\" href=\"#\"><img src=\"assets/images/facebook.png\" alt=\"facebook\"> Log in with\n                facebook</a> <a class=\"login_google_btn\" href=\"#\"><img src=\"assets/images/email.png\" alt=\"email\"> Log in\n                with Google</a>\n              <!-- or title -->\n              <div class=\"or_cont\">\n                <hr>\n                <span>or</span>\n              </div>\n              <!-- input email or password -->\n              <div class=\"login_from_field\">\n                <div class=\"login_from_field_inner\">\n                  <span><i class=\"icofont-envelope\"></i></span>\n                  <input type=\"email\" placeholder=\"Email Address\" formControlName=\"email\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" name=\"email\" id=\"loginemail\">\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Please, enter valid email\n                      address.</div>\n                  </div>\n                </div>\n                <div class=\"login_from_field_inner\">\n                  <span><i class=\"icofont-key\"></i></span>\n                  <input type=\"password\" name=\"password\" formControlName=\"password\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" value=\"\" placeholder=\"Password\">\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n                </div>\n                <!-- submit button -->\n                <input type=\"submit\" value=\"Continue\">\n                <div class=\"input_checked\">\n                  <input id=\"checked\" type=\"checkbox\">\n                  <label for=\"checked\">Remember Me?</label>\n                </div>\n              </div>\n\n              <!-- forgot\t -->\n              <div class=\"forgot_pass\"> <a [routerLink]=\"['/forgot-password']\">Forgot Password</a> </div>\n              <hr>\n              <!-- remember or sing up -->\n              <div class=\"remember\">\n                <label for=\"\">Not a member yet ?</label>\n                <a [routerLink]=\"['/signup']\">Sign up now</a>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!-- End Homefix Login Area -->\n<app-footer></app-footer>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { IncludeModule } from 'src/app/includes/include.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    LoginRoutingModule,\n    IncludeModule\n  ]\n})\nexport class LoginModule { }\n"]}